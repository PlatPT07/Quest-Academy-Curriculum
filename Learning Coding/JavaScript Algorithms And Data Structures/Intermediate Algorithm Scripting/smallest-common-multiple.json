{"index.js":"function gcd(a, b) {\n  // Calculate the Greatest Common Divisor using the Euclidean algorithm\n  while (b !== 0) {\n    let temp = b;\n    b = a % b;\n    a = temp;\n  }\n  return a;\n}\n\nfunction lcm(a, b) {\n  // Calculate the Least Common Multiple using GCD\n  return (a * b) / gcd(a, b);\n}\n\nfunction smallestCommons(arr) {\n  // Sort the array to ensure it's in ascending order\n  arr.sort((a, b) => a - b);\n  \n  // Generate the range of numbers between arr[0] and arr[1]\n  let range = [];\n  for (let i = arr[0]; i <= arr[1]; i++) {\n    range.push(i);\n  }\n  \n  // Reduce the range array to find the LCM of the entire range\n  return range.reduce((acc, curr) => lcm(acc, curr), 1);\n}\n\n// Example usage:\nconsole.log(smallestCommons([1, 5]));  // Should return 60\nconsole.log(smallestCommons([5, 1]));  // Should return 60\nconsole.log(smallestCommons([2, 10])); // Should return 2520\nconsole.log(smallestCommons([1, 13])); // Should return 360360\nconsole.log(smallestCommons([23, 18])); // Should return 6056820"}